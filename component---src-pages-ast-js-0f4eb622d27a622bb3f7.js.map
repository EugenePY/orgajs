{"version":3,"sources":["webpack:///./src/pages/ast.js"],"names":["AST","render","d","this","props","data","astToml","replacer","key","value","includes","Array","isArray","length","examples","map","e","i","obj","parse","org","json","JSON","stringify","children","name","desc","React","Component","pageQuery"],"mappings":"kPAKqBA,E,kGACnBC,OAAA,WACE,IAAMC,EAAIC,KAAKC,MAAMC,KAAKC,QACpBC,EAAW,SAACC,EAAKC,GACrB,KAAI,CAAC,UAAUC,SAASF,IACpBG,MAAMC,QAAQH,IAA2B,IAAjBA,EAAMI,QAClC,OAAOJ,GAEHK,EAAWZ,EAAEY,SAASC,KAAI,SAACC,EAAGC,GAClC,IAAMC,EAAMC,gBAAMH,EAAEI,KACdC,EAAOC,KAAKC,UAAUL,EAAIM,SAAS,GAAIjB,EAAU,GACvD,OACE,yBAAKC,IAAG,YAAcS,GACpB,4BAAMD,EAAES,MACR,2BAAKT,EAAEU,MACP,6BAAK,8BAAQV,EAAEI,MACf,sCACA,6BAAK,8BAAQC,QAInB,OACE,kBAAC,IAAD,KACE,oDACEP,I,GAxBuBa,IAAMC,WA8B1BC,EAAS","file":"component---src-pages-ast-js-0f4eb622d27a622bb3f7.js","sourcesContent":["import React from 'react'\nimport { parse } from 'orga'\nimport Layout from '../components/layout'\nimport { graphql } from 'gatsby'\n\nexport default class AST extends React.Component {\n  render() {\n    const d = this.props.data.astToml\n    const replacer = (key, value) => {\n      if ([`parent`].includes(key)) return\n      if (Array.isArray(value) && value.length === 0) return\n      return value\n    }\n    const examples = d.examples.map((e, i) => {\n      const obj = parse(e.org)\n      const json = JSON.stringify(obj.children[0], replacer, 2)\n      return (\n        <div key={`ast-item-${i}`}>\n          <h2>{ e.name }</h2>\n          <p>{ e.desc }</p>\n          <pre><code>{ e.org }</code></pre>\n          <p>Yields:</p>\n          <pre><code>{ json }</code></pre>\n        </div>\n      )\n    })\n    return (\n      <Layout>\n        <h1>Abstract Syntax Tree</h1>\n        { examples }\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query ast {\n    astToml {\n      examples {\n        name\n        org\n        desc\n      }\n    }\n  }\n`\n"],"sourceRoot":""}